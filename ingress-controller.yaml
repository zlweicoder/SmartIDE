apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
  name: ingress-nginx
---
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.2.0
  name: ingress-nginx
  namespace: ingress-nginx
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.2.0
  name: ingress-nginx-admission
  namespace: ingress-nginx
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.2.0
  name: ingress-nginx
  namespace: ingress-nginx
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - configmaps
  - pods
  - secrets
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/status
  verbs:
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingressclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resourceNames:
  - ingress-controller-leader
  resources:
  - configmaps
  verbs:
  - get
  - update
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.2.0
  name: ingress-nginx-admission
  namespace: ingress-nginx
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.2.0
  name: ingress-nginx
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - nodes
  - pods
  - secrets
  - namespaces
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/status
  verbs:
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingressclasses
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.2.0
  name: ingress-nginx-admission
rules:
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - validatingwebhookconfigurations
  verbs:
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.2.0
  name: ingress-nginx
  namespace: ingress-nginx
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ingress-nginx
subjects:
- kind: ServiceAccount
  name: ingress-nginx
  namespace: ingress-nginx
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.2.0
  name: ingress-nginx-admission
  namespace: ingress-nginx
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ingress-nginx-admission
subjects:
- kind: ServiceAccount
  name: ingress-nginx-admission
  namespace: ingress-nginx
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.2.0
  name: ingress-nginx
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ingress-nginx
subjects:
- kind: ServiceAccount
  name: ingress-nginx
  namespace: ingress-nginx
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.2.0
  name: ingress-nginx-admission
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ingress-nginx-admission
subjects:
- kind: ServiceAccount
  name: ingress-nginx-admission
  namespace: ingress-nginx
---
apiVersion: v1
data:
  allow-snippet-annotations: "true"
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.2.0
  name: ingress-nginx-controller
  namespace: ingress-nginx
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.2.0
  name: ingress-nginx-controller
  namespace: ingress-nginx
spec:
  externalTrafficPolicy: Local
  ports:
  - appProtocol: http
    name: http
    port: 80
    protocol: TCP
    targetPort: http
  - appProtocol: https
    name: https
    port: 443
    protocol: TCP
    targetPort: https
  - name: p22000
    port: 22000
    targetPort: 22000
    protocol: TCP
  - name: p22001
    port: 22001
    targetPort: 22001
    protocol: TCP
  - name: p22002
    port: 22002
    targetPort: 22002
    protocol: TCP
  - name: p22003
    port: 22003
    targetPort: 22003
    protocol: TCP
  - name: p22004
    port: 22004
    targetPort: 22004
    protocol: TCP
  - name: p22005
    port: 22005
    targetPort: 22005
    protocol: TCP
  - name: p22006
    port: 22006
    targetPort: 22006
    protocol: TCP
  - name: p22007
    port: 22007
    targetPort: 22007
    protocol: TCP
  - name: p22008
    port: 22008
    targetPort: 22008
    protocol: TCP
  - name: p22009
    port: 22009
    targetPort: 22009
    protocol: TCP
  - name: p22010
    port: 22010
    targetPort: 22010
    protocol: TCP
  - name: p22011
    port: 22011
    targetPort: 22011
    protocol: TCP
  - name: p22012
    port: 22012
    targetPort: 22012
    protocol: TCP
  - name: p22013
    port: 22013
    targetPort: 22013
    protocol: TCP
  - name: p22014
    port: 22014
    targetPort: 22014
    protocol: TCP
  - name: p22015
    port: 22015
    targetPort: 22015
    protocol: TCP
  - name: p22016
    port: 22016
    targetPort: 22016
    protocol: TCP
  - name: p22017
    port: 22017
    targetPort: 22017
    protocol: TCP
  - name: p22018
    port: 22018
    targetPort: 22018
    protocol: TCP
  - name: p22019
    port: 22019
    targetPort: 22019
    protocol: TCP
  - name: p22020
    port: 22020
    targetPort: 22020
    protocol: TCP
  - name: p22021
    port: 22021
    targetPort: 22021
    protocol: TCP
  - name: p22022
    port: 22022
    targetPort: 22022
    protocol: TCP
  - name: p22023
    port: 22023
    targetPort: 22023
    protocol: TCP
  - name: p22024
    port: 22024
    targetPort: 22024
    protocol: TCP
  - name: p22025
    port: 22025
    targetPort: 22025
    protocol: TCP
  - name: p22026
    port: 22026
    targetPort: 22026
    protocol: TCP
  - name: p22027
    port: 22027
    targetPort: 22027
    protocol: TCP
  - name: p22028
    port: 22028
    targetPort: 22028
    protocol: TCP
  - name: p22029
    port: 22029
    targetPort: 22029
    protocol: TCP
  - name: p22030
    port: 22030
    targetPort: 22030
    protocol: TCP
  - name: p22031
    port: 22031
    targetPort: 22031
    protocol: TCP
  - name: p22032
    port: 22032
    targetPort: 22032
    protocol: TCP
  - name: p22033
    port: 22033
    targetPort: 22033
    protocol: TCP
  - name: p22034
    port: 22034
    targetPort: 22034
    protocol: TCP
  - name: p22035
    port: 22035
    targetPort: 22035
    protocol: TCP
  - name: p22036
    port: 22036
    targetPort: 22036
    protocol: TCP
  - name: p22037
    port: 22037
    targetPort: 22037
    protocol: TCP
  - name: p22038
    port: 22038
    targetPort: 22038
    protocol: TCP
  - name: p22039
    port: 22039
    targetPort: 22039
    protocol: TCP
  - name: p22040
    port: 22040
    targetPort: 22040
    protocol: TCP
  - name: p22041
    port: 22041
    targetPort: 22041
    protocol: TCP
  - name: p22042
    port: 22042
    targetPort: 22042
    protocol: TCP
  - name: p22043
    port: 22043
    targetPort: 22043
    protocol: TCP
  - name: p22044
    port: 22044
    targetPort: 22044
    protocol: TCP
  - name: p22045
    port: 22045
    targetPort: 22045
    protocol: TCP
  - name: p22046
    port: 22046
    targetPort: 22046
    protocol: TCP
  - name: p22047
    port: 22047
    targetPort: 22047
    protocol: TCP
  - name: p22048
    port: 22048
    targetPort: 22048
    protocol: TCP
  - name: p22049
    port: 22049
    targetPort: 22049
    protocol: TCP
  - name: p22050
    port: 22050
    targetPort: 22050
    protocol: TCP
  - name: p22051
    port: 22051
    targetPort: 22051
    protocol: TCP
  - name: p22052
    port: 22052
    targetPort: 22052
    protocol: TCP
  - name: p22053
    port: 22053
    targetPort: 22053
    protocol: TCP
  - name: p22054
    port: 22054
    targetPort: 22054
    protocol: TCP
  - name: p22055
    port: 22055
    targetPort: 22055
    protocol: TCP
  - name: p22056
    port: 22056
    targetPort: 22056
    protocol: TCP
  - name: p22057
    port: 22057
    targetPort: 22057
    protocol: TCP
  - name: p22058
    port: 22058
    targetPort: 22058
    protocol: TCP
  - name: p22059
    port: 22059
    targetPort: 22059
    protocol: TCP
  - name: p22060
    port: 22060
    targetPort: 22060
    protocol: TCP
  - name: p22061
    port: 22061
    targetPort: 22061
    protocol: TCP
  - name: p22062
    port: 22062
    targetPort: 22062
    protocol: TCP
  - name: p22063
    port: 22063
    targetPort: 22063
    protocol: TCP
  - name: p22064
    port: 22064
    targetPort: 22064
    protocol: TCP
  - name: p22065
    port: 22065
    targetPort: 22065
    protocol: TCP
  - name: p22066
    port: 22066
    targetPort: 22066
    protocol: TCP
  - name: p22067
    port: 22067
    targetPort: 22067
    protocol: TCP
  - name: p22068
    port: 22068
    targetPort: 22068
    protocol: TCP
  - name: p22069
    port: 22069
    targetPort: 22069
    protocol: TCP
  - name: p22070
    port: 22070
    targetPort: 22070
    protocol: TCP
  - name: p22071
    port: 22071
    targetPort: 22071
    protocol: TCP
  - name: p22072
    port: 22072
    targetPort: 22072
    protocol: TCP
  - name: p22073
    port: 22073
    targetPort: 22073
    protocol: TCP
  - name: p22074
    port: 22074
    targetPort: 22074
    protocol: TCP
  - name: p22075
    port: 22075
    targetPort: 22075
    protocol: TCP
  - name: p22076
    port: 22076
    targetPort: 22076
    protocol: TCP
  - name: p22077
    port: 22077
    targetPort: 22077
    protocol: TCP
  - name: p22078
    port: 22078
    targetPort: 22078
    protocol: TCP
  - name: p22079
    port: 22079
    targetPort: 22079
    protocol: TCP
  - name: p22080
    port: 22080
    targetPort: 22080
    protocol: TCP
  - name: p22081
    port: 22081
    targetPort: 22081
    protocol: TCP
  - name: p22082
    port: 22082
    targetPort: 22082
    protocol: TCP
  - name: p22083
    port: 22083
    targetPort: 22083
    protocol: TCP
  - name: p22084
    port: 22084
    targetPort: 22084
    protocol: TCP
  - name: p22085
    port: 22085
    targetPort: 22085
    protocol: TCP
  - name: p22086
    port: 22086
    targetPort: 22086
    protocol: TCP
  - name: p22087
    port: 22087
    targetPort: 22087
    protocol: TCP
  - name: p22088
    port: 22088
    targetPort: 22088
    protocol: TCP
  - name: p22089
    port: 22089
    targetPort: 22089
    protocol: TCP
  - name: p22090
    port: 22090
    targetPort: 22090
    protocol: TCP
  - name: p22091
    port: 22091
    targetPort: 22091
    protocol: TCP
  - name: p22092
    port: 22092
    targetPort: 22092
    protocol: TCP
  - name: p22093
    port: 22093
    targetPort: 22093
    protocol: TCP
  - name: p22094
    port: 22094
    targetPort: 22094
    protocol: TCP
  - name: p22095
    port: 22095
    targetPort: 22095
    protocol: TCP
  - name: p22096
    port: 22096
    targetPort: 22096
    protocol: TCP
  - name: p22097
    port: 22097
    targetPort: 22097
    protocol: TCP
  - name: p22098
    port: 22098
    targetPort: 22098
    protocol: TCP
  - name: p22099
    port: 22099
    targetPort: 22099
    protocol: TCP
  - name: p22100
    port: 22100
    targetPort: 22100
    protocol: TCP
  selector:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.2.0
  name: ingress-nginx-controller-admission
  namespace: ingress-nginx
spec:
  ports:
  - appProtocol: https
    name: https-webhook
    port: 443
    targetPort: webhook
  selector:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.2.0
  name: ingress-nginx-controller
  namespace: ingress-nginx
spec:
  minReadySeconds: 0
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: ingress-nginx
      app.kubernetes.io/name: ingress-nginx
  template:
    metadata:
      labels:
        app.kubernetes.io/component: controller
        app.kubernetes.io/instance: ingress-nginx
        app.kubernetes.io/name: ingress-nginx
    spec:
      containers:
      - args:
        - /nginx-ingress-controller
        - --publish-service=ingress-nginx/ingress-nginx-controller
        - --election-id=ingress-controller-leader
        - --controller-class=k8s.io/ingress-nginx
        - --ingress-class=nginx
        - --configmap=ingress-nginx/ingress-nginx-controller
        - --validating-webhook=:8443
        - --validating-webhook-certificate=/usr/local/certificates/cert
        - --validating-webhook-key=/usr/local/certificates/key
        - --tcp-services-configmap=ingress-nginx/ingress-nginx-tcp
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: LD_PRELOAD
          value: /usr/local/lib/libmimalloc.so
        image: registry.cn-hangzhou.aliyuncs.com/smartide/ingress-nginx-controller:v1.2.0
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - /wait-shutdown
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: controller
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
        - containerPort: 443
          name: https
          protocol: TCP
        - containerPort: 8443
          name: webhook
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          requests:
            cpu: 100m
            memory: 90Mi
        securityContext:
          allowPrivilegeEscalation: true
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - ALL
          runAsUser: 101
        volumeMounts:
        - mountPath: /usr/local/certificates/
          name: webhook-cert
          readOnly: true
      dnsPolicy: ClusterFirst
      nodeSelector:
        kubernetes.io/os: linux
      serviceAccountName: ingress-nginx
      terminationGracePeriodSeconds: 300
      volumes:
      - name: webhook-cert
        secret:
          secretName: ingress-nginx-admission
---
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.2.0
  name: ingress-nginx-admission-create
  namespace: ingress-nginx
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/component: admission-webhook
        app.kubernetes.io/instance: ingress-nginx
        app.kubernetes.io/name: ingress-nginx
        app.kubernetes.io/part-of: ingress-nginx
        app.kubernetes.io/version: 1.2.0
      name: ingress-nginx-admission-create
    spec:
      containers:
      - args:
        - create
        - --host=ingress-nginx-controller-admission,ingress-nginx-controller-admission.ingress-nginx.svc
        - --namespace=ingress-nginx
        - --secret-name=ingress-nginx-admission
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: registry.cn-hangzhou.aliyuncs.com/smartide/kube-webhook-certgen:v1.1.1
        imagePullPolicy: IfNotPresent
        name: create
        securityContext:
          allowPrivilegeEscalation: false
      nodeSelector:
        kubernetes.io/os: linux
      restartPolicy: OnFailure
      securityContext:
        fsGroup: 2000
        runAsNonRoot: true
        runAsUser: 2000
      serviceAccountName: ingress-nginx-admission
---
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.2.0
  name: ingress-nginx-admission-patch
  namespace: ingress-nginx
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/component: admission-webhook
        app.kubernetes.io/instance: ingress-nginx
        app.kubernetes.io/name: ingress-nginx
        app.kubernetes.io/part-of: ingress-nginx
        app.kubernetes.io/version: 1.2.0
      name: ingress-nginx-admission-patch
    spec:
      containers:
      - args:
        - patch
        - --webhook-name=ingress-nginx-admission
        - --namespace=ingress-nginx
        - --patch-mutating=false
        - --secret-name=ingress-nginx-admission
        - --patch-failure-policy=Fail
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: registry.cn-hangzhou.aliyuncs.com/smartide/kube-webhook-certgen:v1.1.1
        imagePullPolicy: IfNotPresent
        name: patch
        securityContext:
          allowPrivilegeEscalation: false
      nodeSelector:
        kubernetes.io/os: linux
      restartPolicy: OnFailure
      securityContext:
        fsGroup: 2000
        runAsNonRoot: true
        runAsUser: 2000
      serviceAccountName: ingress-nginx-admission
---
apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.2.0
  name: nginx
spec:
  controller: k8s.io/ingress-nginx
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.2.0
  name: ingress-nginx-admission
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: ingress-nginx-controller-admission
      namespace: ingress-nginx
      path: /networking/v1/ingresses
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: validate.nginx.ingress.kubernetes.io
  rules:
  - apiGroups:
    - networking.k8s.io
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - ingresses
  sideEffects: None
